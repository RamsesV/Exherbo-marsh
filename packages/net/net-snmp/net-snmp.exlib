# Copyright 2011-2012 Markus Schmits <marsh.exherbo@gmail.com>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'net-snmp-5.4.2.1-r3.ebuild' from Gentoo, which is:
#     Copyright 1999-2009 Gentoo Foundation.

require python
export_exlib_phases src_prepare src_configure src_compile src_install pkg_postrm pkg_postrm

SUMMARY="Simple Network Management Protocol (SNMP)"
DESCRIPTION="Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and
welfare of network equipment (eg. routers), computer equipment and even devices like UPSs. Net-SNMP
is a suite of applications used to implement SNMP v1, SNMP v2c and SNMP v3 using both IPv4 and IPv6.
"
HOMEPAGE="http://${PN}.sourceforge.net/"
DOWNLOADS="mirror://sourceforge/${PN}/${PNV}.tar.gz"

BUGS_TO="marsh.exherbo@gmail.com"
REMOTE_IDS="freecode:${PN}"
LICENCES="as-is BSD"
SLOT="0"

MYOPTIONS="bzip2 diskio doc elf 
           extensible ipv6 kernel_linux lm_sensors 
           mfd-rewrites minimal perl python rpm 
           selinux sendmail smux ssl tcpd X zlib"

RESTRICT="test"

COMMON="ssl? ( dev-libs/openssl[>=0.9.6d] )
	tcpd? ( sys-apps/tcp-wrappers[>=7.6] ) 
	rpm? (
		  app-arch/rpm 
		  dev-libs/popt
		  app-arch/bzip2
		  sys-libs/zlib[>=1.1.4]
	)
	bzip2? ( app-arch/bzip2 ) 
	zlib? ( sys-libs/zlib[>=1.1.4] )
	elf? ( dev-util/elfutils )
	lm_sensors? (
		kernel_linux? ( sys-apps/lm_sensors )
	)
	python? ( dev-python/setuptools )"

DEPENDENCIES="
    build+run:
	${COMMON}
	perl? (
		X? ( dev-perl/Tk )
		!minimal? ( dev-perl/TermReadKey )
	)
    selinux? ( sec-policy/selinux-snmpd )"

net-snmp_src_prepare() {
    if option python ; then
        PYTHON_MODNAME="netsnmp"
        PYTHON_DIR="/usr/lib/python2.7/site-packages"
        sed -i -e "s:\(install --basedir=\$\$dir\):\1 --root='${IMAGE}':" Makefile.in || \
        die "sed python failed"
    fi

    # remove CFLAGS from net-snmp-config script (bug #257622):
#    sed -i \
#        -e 's|@CFLAGS@ ||g' \
#        -e 's|@LDFLAGS@ ||g' \
#        net-snmp-config.in || die "sedding CFLAGS failed"

    # Respect LDFLAGS
#    sed -i Makefile.top \
#        -e '/^LIB_LD_CMD/{s|$(CFLAGS)|& $(LDFLAGS)|g}' \
#        || die "sed LDFLAGS failed"

}

net-snmp_src_configure() {

    local mibs="host ucd-snmp/dlmod"
    option diskio && mibs="${mibs} ucd-snmp/diskio"
    option extensible && mibs="${mibs} ucd-snmp/extensible"
    option lm_sensors && mibs="${mibs} ucd-snmp/lmsensorsMib"
    option sendmail && mibs="${mibs} mibII/mta_sendmail"
    option smux && mibs="${mibs} smux"

    local myconf="$(option_enable ipv6) \
		$(option_enable mfd-rewrites) \
		$(option_enable perl embedded-perl) \
		$(option_enable !ssl internal-md5) \
		$(option_with elf) \
		$(option_with perl perl-modules) \
		$(option_with python python-modules) \
		$(option_with ssl openssl) \
		$(option_with tcpd libwrap)"
    if option rpm ; then
        myconf="${myconf} \
			--with-rpm \
			--with-bzip2 \
			--with-zlib"
    else
        myconf="${myconf} \
			$(option_with bzip2) \
			$(option_with zlib)"
    fi

    econf \
        --with-install-prefix="${IMAGE}" \
        --with-sys-location="Unknown" \
        --with-sys-contact="root@Unknown" \
        --with-default-snmp-version="3" \
        --with-mib-modules="${mibs}" \
        --with-logfile="/var/log/net-snmpd.log" \
        --with-persistent-directory="/var/lib/net-snmp" \
        --enable-ucd-snmp-compatibility \
        --enable-shared \
        --enable-as-needed \
        ${myconf}
}

#net-snmp_src_compile() {
#      emake -j1 || die "emake failed"
#      if option doc ; then
#        einfo "Building HTML Documentation"
#        make docsdox || die "failed to build docs"
#      fi
#}

#net-snmp_src_install() {
#      make -j1 DESTDIR="${IMAGE}" install || die "make install failed"
#      if option perl ; then
#        fixlocalpod
#        option X || rm -f "${IMAGE}"/usr/bin/tkmib
#      else
#        rm -f "${IMAGE}"/usr/bin/mib2c "${IMAGE}"/usr/bin/snmpcheck "${IMAGE}"/usr/bin/tkmib
#      fi
#
#      dodoc AGENT.txt ChangeLog FAQ INSTALL NEWS PORTING README* TODO || die
#      newdoc EXAMPLE.conf.def EXAMPLE.conf || die
#
#      option doc && { dohtml docs/html/* || die ; }
#
#      keepdir /etc/snmp /var/lib/net-snmp
#
#      newinitd "${FILES}"/snmpd.init snmpd || die
#      newconfd "${FILES}"/snmpd.conf snmpd || die
#
#      newinitd "${FILES}"/snmptrapd.init snmptrapd || die
#      newconfd "${FILES}"/snmptrapd.conf snmptrapd || die

      # Remove everything not required for an agent.
      # Keep only the snmpd, snmptrapd, MIBs, headers and libraries.
#      if option minimal; then
#        elog "OPTION='minimal' is set. Removing excess/non-minimal components."
#        rm -rf
#        "${IMAGE}"/usr/bin/{encode_keychange,snmp{get,getnext,set,usm,walk,bulkwalk,table,trap,bulkget,translate,status,delta,test,df, \ 
#        vacm,netstat,inform,snmpcheck}}
#        rm -rf "${IMAGE}"/usr/share/snmp/snmpconf-data
#        "${IMAGE}"/usr/share/snmp/*.conf
#        rm -rf "${IMAGE}"/usr/bin/{fixproc,traptoemail}
#        "${IMAGE}"/usr/bin/snmpc{heck,onf}
#        find "${IMAGE}" -name '*.pl' -exec rm -f '{}' \;
#        option ipv6 || rm -rf "${IMAGE}"/usr/share/snmp/mibs/IPV6*
#      fi

      # bug 113788, install example config
#      insinto /etc/snmp
#      newins "${WORK}"/EXAMPLE.conf snmpd.conf.example || die
#}

net-snmp_pkg_postrm() {
    option python && python_mod_cleanup
}

net-snmp_pkg_postinst() {
    elog "An example configuration file has been installed in"
    elog "/etc/snmp/snmpd.conf.example."
}
